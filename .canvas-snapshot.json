{
  "quiz": {
    "id": 19086,
    "title": "Object Inheritance Quiz",
    "html_url": "https://learning.flatironschool.com/courses/3299/quizzes/19086",
    "mobile_url": "https://learning.flatironschool.com/courses/3299/quizzes/19086?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-3-quiz-object-inheritance\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-3-quiz-object-inheritance/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 7,
    "points_possible": 7.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_19086"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": "until_after_last_attempt",
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19086/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19086/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19086/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/3299/quizzes/19086/submission_versions",
    "assignment_id": 129361,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 6376,
    "show_correct_answers_last_attempt": true,
    "version_number": 5,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "gc850a1dce3b251bae94f8d71a0903eb8",
    "question_types": [
      "multiple_choice_question",
      "multiple_dropdowns_question",
      "true_false_question"
    ]
  },
  "questions": [
    {
      "quiz_id": 19086,
      "id": 120506,
      "quiz_group_id": null,
      "assessment_question_id": 135355,
      "position": null,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Object inheritance means that an object can use all of the attributes and\nbehaviors (i.e. all of the methods) of the parent/super class.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74056\">Defining Object Inheritance</a></li></ul><p></p>",
      "answers": [
        {
          "id": 7489,
          "text": "",
          "html": "<p>True</p>",
          "comments": "",
          "comments_html": "<p>Correct! Objects (or children) that inherit from a parent class have access to\nthe parent's attributes, such as instance variables, and methods.</p>",
          "weight": 100.0
        },
        {
          "id": 3151,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        },
        {
          "id": 3868,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19086,
      "id": 120507,
      "quiz_group_id": null,
      "assessment_question_id": 135358,
      "position": null,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<p>We have a <code>Computer</code> class and would like to declare <code>Laptop</code> as a subclass of\n<code>Computer</code>. Which syntax should we use?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74056\">Defining Object Inheritance</a></li></ul><p></p>",
      "answers": [
        {
          "id": 5947,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop</span> <span class=\"o\">&lt;</span> <span class=\"no\">Computer</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Yes! We use the <em>less than</em> symbol followed by the name of the parent class to\nspecify that <code>Laptop</code> inherits from <code>Computer</code>.</p>",
          "weight": 100.0
        },
        {
          "id": 5555,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Computer</span> <span class=\"o\">&gt;</span> <span class=\"no\">Laptop</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite, but close. Try to think of it this way: which class is adding its\nproperties to the subclass (child class)? Now, which way should the arrow\npoint?</p>",
          "weight": 0.0
        },
        {
          "id": 1741,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This code declares the Laptop class but it doesn't cause the Laptop class to\ninherit from Computer. How can we make that happen? What's missing?</p>",
          "weight": 0.0
        },
        {
          "id": 3407,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Computer</span> <span class=\"o\">&lt;</span> <span class=\"no\">Laptop</span>\n\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>This would actually declare the <code>Computer</code> class and cause it to inherit from\n<code>Laptop</code>. How can we declare the <code>Laptop</code> class and make it inherit from\n<code>Computer</code> instead?</p>",
          "weight": 0.0
        },
        {
          "id": 9769,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19086,
      "id": 120508,
      "quiz_group_id": null,
      "assessment_question_id": 135359,
      "position": null,
      "question_name": "Object Inheritance: Fundamentals",
      "question_type": "multiple_choice_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Computer</span>\n  <span class=\"nb\">attr_accessor</span> <span class=\"ss\">:name</span><span class=\"p\">,</span> <span class=\"ss\">:ram</span><span class=\"p\">,</span> <span class=\"ss\">:hd</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">,</span> <span class=\"n\">ram</span><span class=\"p\">,</span> <span class=\"n\">hd</span><span class=\"p\">)</span>\n    <span class=\"vi\">@name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n    <span class=\"vi\">@ram_amount</span> <span class=\"o\">=</span> <span class=\"n\">ram</span>\n    <span class=\"vi\">@hd_size</span> <span class=\"o\">=</span> <span class=\"n\">hd</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">calculate</span>\n    <span class=\"s2\">\"Crunching numbers!\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>To overwrite an inherited method from <code>Computer</code>, which syntax should be used?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74056\">Defining Object Inheritance</a></li></ul><p></p>",
      "answers": [
        {
          "id": 3485,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop</span> <span class=\"o\">&lt;</span> <span class=\"no\">Computer</span>\n  <span class=\"k\">def</span> <span class=\"nf\">calculate</span>\n    <span class=\"s2\">\"Processing mathematics!\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Perfect! We declare the method with the same name inside the subclass and then\nwrite our code.</p>",
          "weight": 100.0
        },
        {
          "id": 4939,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Computer::Laptop</span>\n  <span class=\"k\">def</span> <span class=\"nf\">calculate</span>\n    <span class=\"s2\">\"Processing mathematics!\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. The double colon signifies namespacing, i.e. a module or class\ncalled Laptop would be declared inside of a module or class called Computer.\nThis is different from inheritance.</p>",
          "weight": 0.0
        },
        {
          "id": 3381,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Laptop</span>\n  <span class=\"k\">def</span> <span class=\"nf\">calculate</span>\n    <span class=\"s2\">\"Processing mathematics!\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Laptop is being declared, but it isn't inheriting from a parent class. How do\nwe fix this?</p>",
          "weight": 0.0
        },
        {
          "id": 3017,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19086,
      "id": 120509,
      "quiz_group_id": null,
      "assessment_question_id": 135361,
      "position": null,
      "question_name": "Object Inheritance: Modules",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">module</span> <span class=\"nn\">Phrase</span>\n  <span class=\"k\">def</span> <span class=\"nf\">hello</span>\n    <span class=\"s2\">\"Hello!\"</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">goodbye</span>\n    <span class=\"s2\">\"Good bye!\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Parrot</span>\n  <span class=\"kp\">include</span> <span class=\"no\">Phrase</span>\n\n  <span class=\"nb\">attr_accessor</span> <span class=\"ss\">:name</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n    <span class=\"vi\">@name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Human</span>\n  <span class=\"kp\">include</span> <span class=\"no\">Phrase</span>\n\n  <span class=\"nb\">attr_accessor</span> <span class=\"ss\">:name</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n    <span class=\"vi\">@name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>The inheritance shown in the code above is an example of what?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74058\">Modules</a></li></ul><p></p>",
      "answers": [
        {
          "id": 4873,
          "text": "",
          "html": "<p>Using methods from a module as instance methods</p>",
          "comments": "",
          "comments_html": "<p>Fantastic! The <code>include</code> keyword allows us to use the methods from the <code>Phrase</code>\nmodule in the <code>Parrot</code> and <code>Human</code> classes as instance methods.</p>",
          "weight": 100.0
        },
        {
          "id": 6012,
          "text": "",
          "html": "<p>Subclass inheritance</p>",
          "comments": "",
          "comments_html": "<p>Not quite. Take a look at how <code>Parrot</code> and <code>Human</code> are declared. Does that look\nlike the same syntax used for inheritance?</p>",
          "weight": 0.0
        },
        {
          "id": 711,
          "text": "",
          "html": "<p>Using methods from a module as class methods</p>",
          "comments": "",
          "comments_html": "<p>Not quite. To use methods from a module as <strong>class</strong> methods, use the <code>extend</code>\nkeyword, not <code>include</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 2924,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19086,
      "id": 120510,
      "quiz_group_id": null,
      "assessment_question_id": 135363,
      "position": null,
      "question_name": "Object Inheritance: Modules",
      "question_type": "multiple_dropdowns_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">module</span> <span class=\"nn\">Talk</span>\n  <span class=\"k\">module</span> <span class=\"nn\">Phrases</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hello</span>\n      <span class=\"s2\">\"Hello!\"</span>\n    <span class=\"k\">end</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">goodbye</span>\n      <span class=\"s2\">\"Good bye!\"</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"k\">module</span> <span class=\"nn\">Teachers</span>\n    <span class=\"k\">def</span> <span class=\"nf\">teach</span>\n      <span class=\"s2\">\"Repeat after me.\"</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>The code sample above is an example of [a1] modules. To access the <code>Teachers</code>\nmodule to include it in a class, we would type include [a2].</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74058\">Modules</a></li></ul><p></p>",
      "answers": [
        {
          "id": 4528,
          "text": "nested",
          "comments": "",
          "comments_html": "<p>Correct! Both <code>Teachers</code> and <code>Phrases</code> are nested inside of <code>Talk</code>. They can\nbe accessed using <code>::</code>.</p>",
          "weight": 100.0,
          "blank_id": "a1"
        },
        {
          "id": 5912,
          "text": "subclass inherited",
          "comments": "",
          "comments_html": "<p>There aren't any classes, nor any subclass inheritance, in the syntax above.\nYou might want to review the resource/s for this question.</p>",
          "weight": 0.0,
          "blank_id": "a1"
        },
        {
          "id": 2444,
          "text": "I don't know",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "blank_id": "a1"
        },
        {
          "id": 4870,
          "text": "Talk::Teachers",
          "comments": "",
          "comments_html": "<p>Correct! To <code>include</code> the <code>Teachers</code> module, we need to access it using <code>::</code>\non the module that contains it.</p>",
          "weight": 100.0,
          "blank_id": "a2"
        },
        {
          "id": 154,
          "text": "Teachers::Talk",
          "comments": "",
          "comments_html": "<p>When using <code>::</code> to access a nested module, we put the module that contains the\nother module on the left side of the double colon.</p>",
          "weight": 0.0,
          "blank_id": "a2"
        },
        {
          "id": 3942,
          "text": "Talk.Teachers",
          "comments": "",
          "comments_html": "<p>Not quite. This looks more like we're trying to call a method on <code>Talk</code>.</p>",
          "weight": 0.0,
          "blank_id": "a2"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19086,
      "id": 120511,
      "quiz_group_id": null,
      "assessment_question_id": 181183,
      "position": null,
      "question_name": "Object Inheritance: Modules",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">DailyRoutine</span>\n  <span class=\"k\">def</span> <span class=\"nf\">morning</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"coffee\"</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"shower\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MondayRoutine</span> <span class=\"o\">&lt;</span> <span class=\"no\">DailyRoutine</span>\n  <span class=\"k\">def</span> <span class=\"nf\">morning</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"jog\"</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"coffee\"</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"shower\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>We want the <code>morning</code> method in the <code>MondayRoutine</code> class to add to the parent\nclass's functionality, rather than completely overwrite it. How do we do this in\na way that doesn't duplicate so much code?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/super\">Super</a></li></ul><p></p>",
      "answers": [
        {
          "id": 6029,
          "text": "",
          "html": "<p>Use <code>super</code> in <code>MondayRoutine#morning</code> method.</p>",
          "comments": "",
          "comments_html": "<p>Correct! We can call <code>super</code> anywhere we want in the method to call the\nparent's method, like so:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">MondayRoutine</span> <span class=\"o\">&lt;</span> <span class=\"no\">DailyRoutine</span>\n  <span class=\"k\">def</span> <span class=\"nf\">morning</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"jog\"</span>\n    <span class=\"k\">super</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "weight": 100.0
        },
        {
          "id": 2541,
          "text": "",
          "html": "<p>Use <code>extend</code> in the <code>MondayRoutine</code> class.</p>",
          "comments": "",
          "comments_html": "<p>Not quite. We use <code>extend</code> to mix in class methods from a module. You might\nwant to review the resource/s for this question.</p>",
          "weight": 0.0
        },
        {
          "id": 8661,
          "text": "",
          "html": "<p>Use <code>include</code> in the <code>MondayRoutine</code> class.</p>",
          "comments": "",
          "comments_html": "<p>Not quite. We use <code>include</code> to mix in instance methods from a module. You\nmight want to review the resource/s for this question.</p>",
          "weight": 0.0
        },
        {
          "id": 4889,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19086,
      "id": 120512,
      "quiz_group_id": null,
      "assessment_question_id": 135365,
      "position": null,
      "question_name": "Object Inheritance: Super",
      "question_type": "multiple_choice_question",
      "question_text": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Furniture</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"Your furniture is being built\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>We have a parent class <code>Furniture</code> and a subclass <code>Table</code>. In the <code>Table</code> class,\nwe want to be able to call <code>#build</code> and have it print \"You have chosen a table\"\nfollowed by \"Your furniture is being built\". Which code block achieves this?\nChoose the <strong>best</strong> option.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/pages/super?module_item_id=143842\">Super</a></li></ul><p></p>",
      "answers": [
        {
          "id": 7900,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span> <span class=\"o\">&lt;</span> <span class=\"no\">Furniture</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"You have chosen a table\"</span>\n    <span class=\"k\">super</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Yes! If <code>Table</code> inherits from <code>Furniture</code> we can use the <code>Furniture#build</code>\nmethod by calling <code>super</code> after running whatever extra functionality we need\nto run first.</p>",
          "weight": 100.0
        },
        {
          "id": 993,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span> <span class=\"o\">&lt;</span> <span class=\"no\">Furniture</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span>\n    <span class=\"k\">super</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"You have chosen a table\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Almost. In which order will the strings print? How can we make them print in the\ncorrect order?</p>",
          "weight": 0.0
        },
        {
          "id": 8169,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"You have chosen a table\"</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"Your furniture is being built\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. While this will achieve what we want, we have repeated ourselves.\nWhat can we do instead to DRY up our code and ensure the strings print in the\ncorrect order?</p>",
          "weight": 0.0
        },
        {
          "id": 332,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Table</span> <span class=\"o\">&lt;</span> <span class=\"no\">Furniture</span>\n  <span class=\"k\">def</span> <span class=\"nf\">build</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"You have chosen a table\"</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"Your furniture is being built\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. While this will achieve what we want, we have repeated ourselves and\nwe've also overwritten the parent's method. What can we do instead to DRY up our\ncode and ensure the strings print in the correct order?</p>",
          "weight": 0.0
        },
        {
          "id": 7911,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}